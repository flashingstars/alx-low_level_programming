#include "main.h"

int check_palindrome(char *s, int i, int len);
int _strlen_recursion(char *s);

/**
 * is_palindrome - checks if a string is palindrome
 *
 * @s: string to be checked
 *
 * Return: 1 if it is a palindrome
 * 0 if it is not a palindrome
 */

int is_palindrome(char *s)
{
	int len = _strlen_recursion(s);

	return (check_palindrome(s, len - 1));
}

/**
 * _strlen_recursion - checks the length of the string recursively
 *
 * @s: string to be checked length
 *
 * Return: length of string
 */
int _strlen_recursion(char *s)
{
	if (!*s)
	{
		return (0);
	}
	return (1 + _strlen_recursion(++s));
}

/**
 * check_palindrome - checks whether string is palindrome using recursion
 *
 * @s: string to be checked
 * @l: position
 *
 * Return: 1 if palindrome, else 0
 */

int check_palindrome(char *s, int l)
{
	if (l < 1)
	{
		return (1);
	}
	if (*s == *(s + 1))
	{
		return (check_palindrome(s + 1, l - 2));
	}
	return (0);
}
